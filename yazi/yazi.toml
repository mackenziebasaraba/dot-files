"$schema" = "https://yazi-rs.github.io/schemas/yazi.json"

[manager]
linemode    = "size"
show_hidden = false
sort_by     = "natural"

[preview]
tab_size   = 2
max_width  = 1000
max_height = 1500
image_delay = 0
image_filter    = "triangle"
image_quality   = 75
sixel_fraction  = 15
ueberzug_scale  = 1
ueberzug_offset = [ 0, 0, 0, 0 ]


[opener]
#open = [
#	{ run = 'opener "$@"', block = true, desc = "Open" },
#]
text = [
    { run = 'nvim "$@"', block = true, desc = "neovim", for = "linux" },
    { run = 'xdg-open "$@"', orphan = true, desc = "xdg-open", for = "linux" },
]
document = [
    { run = 'zathura "$@"', block = true, desc = "zathra", for = "linux" },
    { run = 'libreoffice "@"', orphan = true, desc = "libreoffice", for = "linux"},
    { run = 'xdg-open "$@"', orphan = true, desc = "xdg-open", for = "linux" },
]
image = [
    { run = 'rotdir "$@" | grep -i "\.\(png\|jpg\|jpeg\|gif\|webp\|avif\|tif\|ico\)\(_large\)*$" | nsxiv -s f -aio 2>/dev/null', block = true, desc = "nsxiv", for = "linux", setsid = true },
    { run = 'xdg-open "$@"', orphan = true, desc = "xdg-open", for = "linux" },
]
video = [
    { run = 'mpv -quiet "$@"', block = true, desc = "mpv", for = "linux" },
    { run = 'xdg-open "$@"', orphan = true, desc = "xdg-open", for = "linux" },
]
audio = [
    { run = 'mpv "$@"', block = true, desc = "mpv", for = "linux" },
    { run = 'xdg-open "$@"', orphan = true, desc = "xdg-open", for = "linux" },
]
fallback = [
    { run = 'xdg-open "$@"', orphan = true, desc = "xdg-open", for = "linux" },
]

[open]
rules = [
	{ name = "*/", use = [ "edit", "open", "reveal" ] },

	{ mime = "text/*", use = "text" },
    { mime = "image/*", use = "image" },
    { mime = "video/*", use = "video" },
    { mime = "audio/*", use = "audio" },
    { mime = "inode/x-empty", use = "text" },
    { mime = "application/json", use = "text" },
    { mime = "application/zip", use = "archive" },
    { mime = "application/gzip", use = "archive" },
    { mime = "application/x-bzip", use = "archive" },
    { mime = "application/x-bzip2", use = "archive" },
    { mime = "application/x-tar", use = "archive" },
    { mime = "application/x-7z-compressed", use = "archive" },
    { mime = "application/x-rar", use = "archive" },
    { mime = "application/pdf", use = "document" },
    { mime = "application/epub+zip", use = "document" },
    { mime = "application/x-mobipocket-ebook", use = "document" },
    { mime = "*", use = "fallback" },
]

[tasks]
micro_workers    = 10
macro_workers    = 25
bizarre_retry    = 5
image_alloc      = 536870912  # 512MB
image_bound      = [ 0, 0 ]
suppress_preload = false


[input]
# cd
cd_title  = "Change directory:"
cd_origin = "top-center"
cd_offset = [ 0, 2, 50, 3 ]

# create
# create_title  = "Create:"
create_origin = "top-center"
create_offset = [ 0, 2, 50, 3 ]

# rename
rename_title  = "Rename:"
rename_origin = "hovered"
rename_offset = [ 0, 1, 50, 3 ]

# trash
trash_title 	= "Move {n} selected file{s} to trash? (y/N)"
trash_origin	= "top-center"
trash_offset	= [ 0, 2, 50, 3 ]

# delete
delete_title 	= "Delete {n} selected file{s} permanently? (y/N)"
delete_origin	= "top-center"
delete_offset	= [ 0, 2, 50, 3 ]

# filter
filter_title  = "Filter:"
filter_origin = "top-center"
filter_offset = [ 0, 2, 50, 3 ]

# find
find_title  = [ "Find next:", "Find previous:" ]
find_origin = "top-center"
find_offset = [ 0, 2, 50, 3 ]

# search
search_title  = "Search via {n}:"
search_origin = "top-center"
search_offset = [ 0, 2, 50, 3 ]

# shell
shell_title  = [ "Shell:", "Shell (block):" ]
shell_origin = "top-center"
shell_offset = [ 0, 2, 50, 3 ]

# overwrite
overwrite_title  = "Overwrite an existing file? (y/N)"
overwrite_origin = "top-center"
overwrite_offset = [ 0, 2, 50, 3 ]

# quit
quit_title  = "{n} task{s} running, sure to quit? (y/N)"
quit_origin = "top-center"
quit_offset = [ 0, 2, 50, 3 ]

[select]
open_title  = "Open with:"
open_origin = "hovered"
open_offset = [ 0, 1, 50, 7 ]

[log]
enabled = true

[plugin]
prepend_previewers = [
    { mime = "audio/*",   run = "exifaudio"},
#    { name = "*.lang_type", run = "rich-preview"} # for particular language files eg. .py, .go., .lua, etc.
]
